<?xml version="1.0" encoding="UTF-8"?>
<project xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd" xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
	<modelVersion>4.0.0</modelVersion>
	<groupId>org.acme</groupId>
	<artifactId>code-with-quarkus</artifactId>
	<version>1.0.0-SNAPSHOT</version>
	<properties>
		<compiler-plugin.version>3.13.0</compiler-plugin.version>
		<maven.compiler.release>21</maven.compiler.release>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<quarkus.platform.artifact-id>quarkus-bom</quarkus.platform.artifact-id>
		<quarkus.platform.group-id>io.quarkus.platform</quarkus.platform.group-id>
		<quarkus.platform.version>3.16.4</quarkus.platform.version>
		<skipITs>true</skipITs>
		<surefire-plugin.version>3.5.0</surefire-plugin.version>
	</properties>
	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>${quarkus.platform.group-id}</groupId>
				<artifactId>${quarkus.platform.artifact-id}</artifactId>
				<version>${quarkus.platform.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>
	<dependencies>
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<version>1.18.36</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>io.quarkus</groupId>
			<artifactId>quarkus-rest</artifactId>
		</dependency>
		<dependency>
			<groupId>io.quarkus</groupId>
			<artifactId>quarkus-resteasy-jackson</artifactId>
		</dependency>
		<dependency>
			<groupId>io.quarkus</groupId>
			<artifactId>quarkus-arc</artifactId>
		</dependency>
		<dependency>
			<groupId>io.quarkus</groupId>
			<artifactId>quarkus-config-yaml</artifactId>
		</dependency>
		<dependency>
			<groupId>io.quarkus</groupId>
			<artifactId>quarkus-jdbc-postgresql</artifactId>
		</dependency>
		<dependency>
			<groupId>io.quarkus</groupId>
			<artifactId>quarkus-opentelemetry</artifactId>
		</dependency>
		<dependency>
			<groupId>io.opentelemetry</groupId>
			<artifactId>opentelemetry-exporter-logging</artifactId>
		</dependency>
		<dependency>
			<groupId>io.opentelemetry</groupId>
			<artifactId>opentelemetry-extension-trace-propagators</artifactId>
		</dependency>
		<dependency>
			<groupId>io.quarkus</groupId>
			<artifactId>quarkus-smallrye-jwt</artifactId>
		</dependency>
		<dependency>
			<groupId>com.bucket4j</groupId>
			<artifactId>bucket4j-core</artifactId>
			<version>8.10.1</version>
		</dependency>
		<dependency>
			<groupId>io.quarkus</groupId>
			<artifactId>quarkus-scheduler</artifactId>
		</dependency>
		<dependency>
			<groupId>io.quarkus</groupId>
			<artifactId>quarkus-junit5</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>io.rest-assured</groupId>
			<artifactId>rest-assured</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>
	<build>
		<plugins>
			<plugin>
				<groupId>${quarkus.platform.group-id}</groupId>
				<artifactId>quarkus-maven-plugin</artifactId>
				<version>${quarkus.platform.version}</version>
				<extensions>true</extensions>
				<executions>
					<execution>
						<goals>
							<goal>build</goal>
							<goal>generate-code</goal>
							<goal>generate-code-tests</goal>
							<goal>native-image-agent</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>${compiler-plugin.version}</version>
				<configuration>
					<parameters>true</parameters>
				</configuration>
			</plugin>
			<plugin>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>${surefire-plugin.version}</version>
				<configuration>
					<systemPropertyVariables>
						<java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager>
						<maven.home>${maven.home}</maven.home>
					</systemPropertyVariables>
				</configuration>
			</plugin>
			<plugin>
				<artifactId>maven-failsafe-plugin</artifactId>
				<version>${surefire-plugin.version}</version>
				<executions>
					<execution>
						<goals>
							<goal>integration-test</goal>
							<goal>verify</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<systemPropertyVariables>
						<native.image.path>${project.build.directory}/${project.build.finalName}-runner</native.image.path>
						<java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager>
						<maven.home>${maven.home}</maven.home>
					</systemPropertyVariables>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.openapitools</groupId>
				<artifactId>openapi-generator-maven-plugin</artifactId>
				<version>7.9.0</version>
				<executions>
					<execution>
						<id>generate-server-api</id>
						<goals>
							<goal>generate</goal>
						</goals>
						<configuration>
							<generateApis>true</generateApis>
							<generateModels>true</generateModels>
							<apiPackage>com.baeldung.openapi.api</apiPackage>
							<modelPackage>com.baeldung.openapi.model</modelPackage>
							<generatorName>jaxrs-spec</generatorName>
							<generateModelTests>false</generateModelTests>
							<generateModelDocumentation>false</generateModelDocumentation>
							<generateApiTests>false</generateApiTests>
							<additionalProperties>interfaceOnly=true,useSwaggerAnnotations=false,returnResponse=true</additionalProperties>
							<inputSpec>${project.basedir}/src/main/resources/openapi/api.yaml</inputSpec>
							<!--
			  <output>${project.build.directory}/generated-sources/openapi/server</output>
			  -->
							<configOptions>
								<sourceFolder>src/main/java</sourceFolder>
								<generatePom>false</generatePom>
								<useTags>true</useTags>
								<library>quarkus</library>
								<dateLibrary>java8</dateLibrary>
								<java17>true</java17>
								<interfaceOnly>true</interfaceOnly>
								<useOptional>true</useOptional>
								<openApiNullable>false</openApiNullable>
								<skipDefaultInterface>true</skipDefaultInterface>
								<useJakartaEe>true</useJakartaEe>
								<useBeanValidation>false</useBeanValidation>
								<generateApiDocs>false</generateApiDocs>
								<documentationProvider>source</documentationProvider>
								<hideGenerationTimestamp>true</hideGenerationTimestamp>
								<delegatePattern>true</delegatePattern>
								<generateSupportingFiles>false</generateSupportingFiles>
							</configOptions>
						</configuration>
					</execution>
				</executions>
				<configuration />
			</plugin>
			<plugin>
				<artifactId>maven-javadoc-plugin</artifactId>
				<version>3.5.0</version>
				<configuration>
					<tags.tag.name>autogenerated</tags.tag.name>
					<tags.tag.head>is generated by ruben</tags.tag.head>
					<tags.tag.placement>a</tags.tag.placement>
				</configuration>
			</plugin>
			<plugin>
				<groupId>net.revelc.code.formatter</groupId>
				<artifactId>formatter-maven-plugin</artifactId>
				<version>2.13.0</version>
				<executions>
					<execution>
						<id>format-source</id>
						<goals>
							<goal>format</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<directories>
						<directory>${project.basedir}/src/main/java</directory>
						<directory>${project.basedir}/src/test/java</directory>
            <directory>${project.basedir}/target/generated-sources</directory>
					</directories>
					<lineEnding>CRLF</lineEnding>
					<configFile>${project.basedir}/src/eclipse-java-google-style.xml</configFile>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.sonarsource.scanner.maven</groupId>
				<artifactId>sonar-maven-plugin</artifactId>
				<version>3.9.1.2184</version>
				<configuration />
			</plugin>
      <plugin>
    <groupId>net.revelc.code</groupId>
    <artifactId>impsort-maven-plugin</artifactId>
    <version>1.12.0</version>
    <configuration>
        <removeUnused>true</removeUnused>
        <staticGroups>*</staticGroups>
        <groups>java.,javax.,org.,com.</groups>
        					<directories>
						<directory>${project.basedir}/src/main/java</directory>
						<directory>${project.basedir}/src/test/java</directory>
            <directory>${project.basedir}/target/generated-sources</directory>
            <directory>${project.basedir}/target/generated-sourcesdada</directory>
					</directories>
    </configuration>
    <executions>
        <execution>
            <goals>
                <goal>sort</goal>
            </goals>
        </execution>
    </executions>
</plugin>
<plugin>
    <groupId>org.apache.maven.plugins</groupId>
    <artifactId>maven-antrun-plugin</artifactId>
    <executions>
        <execution>
            <id>delete-folders-and-files</id>
            <phase>process-sources</phase> <!-- Fase donde deseas ejecutar la limpieza -->
            <goals>
                <goal>run</goal>
            </goals>
            <configuration>
                <target>
                    <!-- Borrar una carpeta -->
                    <delete dir="${project.basedir}/target/generated-sources/openapi/src/main/openapi" />
                    <delete dir="${project.basedir}/target/generated-sources/openapi/src/main/docker" />
                    <delete dir="${project.basedir}/target/generated-sources/openapi/src/main/resources" />
                    <delete dir="${project.basedir}/target/generated-sources/openapi/.openapi-generator" />
                    <delete file="${project.basedir}/target/generated-sources/openapi/README.md" />
                    <delete file="${project.basedir}/target/generated-sources/openapi/.dockerignore" />
                    <delete file="${project.basedir}/target/generated-sources/openapi/.openapi-generator-ignore" />
                    
                    <!-- Borrar mÃºltiples archivos -->
                     <delete>
                        <fileset dir="${project.basedir}/target/generated-sources/openapi/src/main/java/">
                            <!-- Busca el archivo en cualquier subdirectorio -->
                            <include name="**/RestApplication.java" />
                            <include name="**/RestResourceRoot.java" />
                        </fileset>
                    </delete>
                    <!--
                    <delete>
                        <files>
                            <file name="${project.basedir}/target/generated-sources/openapi/src/main/java/*/RestApplication.java" />
                            <file name="${project.basedir}/target/generated-sources/openapi/src/main/java/*/RestResourceRoof.java" />
                        </files>
                    </delete>
                    -->
                </target>
            </configuration>
        </execution>
    </executions>
</plugin>
    
		</plugins>
	</build>
	<profiles>
		<profile>
			<id>native</id>
			<activation>
				<property>
					<name>native</name>
				</property>
			</activation>
			<properties>
				<quarkus.native.enabled>true</quarkus.native.enabled>
				<skipITs>false</skipITs>
			</properties>
		</profile>
		<profile>
			<id>coverage</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.jacoco</groupId>
						<artifactId>jacoco-maven-plugin</artifactId>
						<version>0.8.11</version>
						<executions>
							<execution>
								<id>generate-coverage-report</id>
								<phase>test</phase>
								<goals>
									<goal>report</goal>
								</goals>
							</execution>
							<execution>
								<id>prepare-agent</id>
								<goals>
									<goal>prepare-agent</goal>
								</goals>
							</execution>
						</executions>
						<configuration />
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>mutation</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.pitest</groupId>
						<artifactId>pitest-maven</artifactId>
						<version>1.14.3</version>
						<executions>
							<execution>
								<id>pit-report</id>
								<phase>test</phase>
								<goals>
									<goal>mutationCoverage</goal>
								</goals>
							</execution>
						</executions>
						<dependencies>
							<dependency>
								<groupId>org.pitest</groupId>
								<artifactId>pitest-junit5-plugin</artifactId>
								<version>1.1.2</version>
							</dependency>
						</dependencies>
						<configuration>
							<timestampedReports>false</timestampedReports>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
</project>
