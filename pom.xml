<?xml version="1.0" encoding="UTF-8"?>
<project xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd" xmlns="http://maven.apache.org/POM/4.0.0"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <modelVersion>4.0.0</modelVersion>
  <groupId>org.acme</groupId>
  <artifactId>code-with-quarkus</artifactId>
  <version>1.0.0-SNAPSHOT</version>
  <properties>
    <compiler-plugin.version>3.13.0</compiler-plugin.version>
    <maven.compiler.release>21</maven.compiler.release>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
    <quarkus.platform.artifact-id>quarkus-bom</quarkus.platform.artifact-id>
    <quarkus.platform.group-id>io.quarkus.platform</quarkus.platform.group-id>
    <quarkus.platform.version>3.17.6</quarkus.platform.version>
    <skipITs>true</skipITs>
    <surefire-plugin.version>3.5.0</surefire-plugin.version>
  </properties>
  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>${quarkus.platform.group-id}</groupId>
        <artifactId>${quarkus.platform.artifact-id}</artifactId>
        <version>${quarkus.platform.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>
  <dependencies>
    <dependency>
      <groupId>org.projectlombok</groupId>
      <artifactId>lombok</artifactId>
      <version>1.18.36</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-rest</artifactId>
    </dependency>
    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-rest-jackson</artifactId>
    </dependency>
    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-arc</artifactId>
    </dependency>
    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-config-yaml</artifactId>
    </dependency>
    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-smallrye-health</artifactId>
    </dependency>
    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-jdbc-postgresql</artifactId>
    </dependency>
    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-micrometer-registry-prometheus</artifactId>
    </dependency>
    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-opentelemetry</artifactId>
    </dependency>
    <dependency>
      <groupId>io.opentelemetry</groupId>
      <artifactId>opentelemetry-exporter-logging</artifactId>
    </dependency>
    <dependency>
      <groupId>io.opentelemetry</groupId>
      <artifactId>opentelemetry-exporter-otlp</artifactId>
    </dependency>
    <dependency>
      <groupId>io.opentelemetry</groupId>
      <artifactId>opentelemetry-extension-trace-propagators</artifactId>
    </dependency>
    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-smallrye-jwt</artifactId>
    </dependency>
    <dependency>
      <groupId>com.bucket4j</groupId>
      <artifactId>bucket4j-core</artifactId>
      <version>8.10.1</version>
    </dependency>
    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-scheduler</artifactId>
    </dependency>
    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-cache</artifactId>
    </dependency>
    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-caffeine</artifactId>
    </dependency>
    <dependency>
      <groupId>io.smallrye.reactive</groupId>
      <artifactId>smallrye-mutiny-vertx-web-client</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-text</artifactId>
    </dependency>
    <dependency>
      <groupId>commons-io</groupId>
      <artifactId>commons-io</artifactId>
    </dependency>
    <dependency>
      <groupId>commons-codec</groupId>
      <artifactId>commons-codec</artifactId>
    </dependency>
    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-junit5</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>io.rest-assured</groupId>
      <artifactId>rest-assured</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-core</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.auth0</groupId>
      <artifactId>java-jwt</artifactId>
      <version>4.3.0</version>
    </dependency>
  </dependencies>
  <build>
    <plugins>
      <plugin>
        <groupId>${quarkus.platform.group-id}</groupId>
        <artifactId>quarkus-maven-plugin</artifactId>
        <version>${quarkus.platform.version}</version>
        <extensions>true</extensions>
        <executions>
          <execution>
            <goals>
              <goal>build</goal>
              <goal>generate-code</goal>
              <goal>generate-code-tests</goal>
              <goal>native-image-agent</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>${compiler-plugin.version}</version>
        <configuration>
          <parameters>true</parameters>
        </configuration>
      </plugin>
      <plugin>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>${surefire-plugin.version}</version>
        <configuration>
          <systemPropertyVariables>
            <java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager>
            <maven.home>${maven.home}</maven.home>
          </systemPropertyVariables>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.openapitools</groupId>
        <artifactId>openapi-generator-maven-plugin</artifactId>
        <version>7.10.0</version>
        <executions>
          <execution>
            <id>generate-api-controllers</id>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <configOptions>
                <useTags>true</useTags>
                <interfaceOnly>true</interfaceOnly>
                <useSwaggerAnnotations>false</useSwaggerAnnotations>
                <returnResponse>true</returnResponse>
                <java17>true</java17>
                <hideGenerationTimestamp>true</hideGenerationTimestamp>
                <useJakartaEe>true</useJakartaEe>
                <openApiNullable>false</openApiNullable>
                <skipDefaultInterface>true</skipDefaultInterface>
                <library>quarkus</library>
                <generatePom>false</generatePom>
                <documentationProvider>source</documentationProvider>
                <useOptional>true</useOptional>
                <generateSupportingFiles>false</generateSupportingFiles>
                <generateApiDocs>false</generateApiDocs>
                <useBeanValidation>false</useBeanValidation>
                <dateLibrary>java8</dateLibrary>
                <sourceFolder>src/main/java</sourceFolder>
                <delegatePattern>true</delegatePattern>
                <useMutiny>true</useMutiny>
                <additionalModelTypeAnnotations>@com.fasterxml.jackson.annotation.JsonInclude(com.fasterxml.jackson.annotation.JsonInclude.Include.NON_NULL) @io.quarkus.runtime.annotations.RegisterForReflection</additionalModelTypeAnnotations>
              </configOptions>
              <modelPackage>org.acme.generated.openapi.model</modelPackage>
              <apiPackage>org.acme.openapi.api</apiPackage>
              <generateApiTests>false</generateApiTests>
              <generateModels>true</generateModels>
              <generatorName>jaxrs-spec</generatorName>
              <generateModelTests>false</generateModelTests>
              <inputSpec>${project.basedir}/src/main/resources/META-INF/openapi/api.yaml</inputSpec>
              <generateModelDocumentation>false</generateModelDocumentation>
              <generateApis>true</generateApis>
              <apiPackage>org.acme.generated.openapi.api</apiPackage>
              <additionalProperties>interfaceOnly=true,useSwaggerAnnotations=false,returnResponse=true</additionalProperties>
            </configuration>
          </execution>
        </executions>
        <configuration />
      </plugin>
      <plugin>
        <artifactId>maven-failsafe-plugin</artifactId>
        <version>${surefire-plugin.version}</version>
        <executions>
          <execution>
            <goals>
              <goal>integration-test</goal>
              <goal>verify</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <systemPropertyVariables>
            <native.image.path>${project.build.directory}/${project.build.finalName}-runner</native.image.path>
            <java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager>
            <maven.home>${maven.home}</maven.home>
          </systemPropertyVariables>
        </configuration>
      </plugin>
      <plugin>
        <artifactId>maven-antrun-plugin</artifactId>
        <executions>
          <execution>
            <id>delete-unwanted-openapi-squel-files</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>run</goal>
            </goals>
            <configuration>
              <target>
                <delete dir="${project.basedir}/target/generated-sources/openapi/src/main/.openapi-generator" />
                <delete dir="${project.basedir}/target/generated-sources/openapi/src/main/openapi" />
                <delete dir="${project.basedir}/target/generated-sources/openapi/src/main/docker" />
                <delete dir="${project.basedir}/target/generated-sources/openapi/src/main/resources" />
                <delete file="${project.basedir}/target/generated-sources/openapi/README.md" />
                <delete file="${project.basedir}/target/generated-sources/openapi/.openapi-generator-ignore" />
                <delete file="${project.basedir}/target/generated-sources/openapi/.dockerignore" />
                <delete file="${project.basedir}/target/generated-sources/openapi/src/main/java/org/acme/generated/openapi/RestApplication.java" />
                <delete file="${project.basedir}/target/generated-sources/openapi/src/main/java/org/acme/generated/openapi/RestResourceRoot.java" />
              </target>
            </configuration>
          </execution>
        </executions>
        <configuration />
      </plugin>
      <plugin>
        <groupId>net.revelc.code.formatter</groupId>
        <artifactId>formatter-maven-plugin</artifactId>
        <version>2.13.0</version>
        <executions>
          <execution>
            <id>format-generated-source</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>format</goal>
            </goals>
          </execution>
          <execution>
            <id>format-source</id>
            <goals>
              <goal>format</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <directories>
            <directory>${project.basedir}/src/main/java</directory>
            <directory>${project.basedir}/src/test/java</directory>
            <directory>${project.basedir}/target/generated-sources</directory>
          </directories>
          <lineEnding>CRLF</lineEnding>
          <configFile>${project.basedir}/src/eclipse-java-google-style.xml</configFile>
        </configuration>
      </plugin>
      <plugin>
        <groupId>net.revelc.code</groupId>
        <artifactId>impsort-maven-plugin</artifactId>
        <version>1.12.0</version>
        <executions>
          <execution>
            <id>sort-generated-imports</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>sort</goal>
            </goals>
          </execution>
          <execution>
            <id>sort-imports</id>
            <goals>
              <goal>sort</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <groups>java.,javax.,org.,com.</groups>
          <removeUnused>true</removeUnused>
          <directories>
            <directory>${project.basedir}/src/main/java</directory>
            <directory>${project.basedir}/src/test/java</directory>
            <directory>${project.basedir}/target/generated-sources</directory>
          </directories>
          <staticGroups>java,*</staticGroups>
        </configuration>
      </plugin>
      <plugin>
        <artifactId>maven-javadoc-plugin</artifactId>
        <version>3.5.0</version>
        <configuration>
          <tags.tag.name>autogenerated</tags.tag.name>
          <tags.tag.head>is generated by ruben</tags.tag.head>
          <tags.tag.placement>a</tags.tag.placement>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.sonarsource.scanner.maven</groupId>
        <artifactId>sonar-maven-plugin</artifactId>
        <version>3.9.1.2184</version>
        <configuration />
      </plugin>
    </plugins>
  </build>
  <profiles>
    <profile>
      <id>native</id>
      <activation>
        <property>
          <name>native</name>
        </property>
      </activation>
      <properties>
        <quarkus.native.enabled>true</quarkus.native.enabled>
        <skipITs>false</skipITs>
      </properties>
    </profile>
    <profile>
      <id>coverage</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.jacoco</groupId>
            <artifactId>jacoco-maven-plugin</artifactId>
            <version>0.8.11</version>
            <executions>
              <execution>
                <id>generate-coverage-report</id>
                <phase>test</phase>
                <goals>
                  <goal>report</goal>
                </goals>
              </execution>
              <execution>
                <id>prepare-agent</id>
                <goals>
                  <goal>prepare-agent</goal>
                </goals>
              </execution>
            </executions>
            <configuration>
              <excludes>
                <exclude>**/org/acme/generated/**</exclude>
              </excludes>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>mutation</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.pitest</groupId>
            <artifactId>pitest-maven</artifactId>
            <version>1.14.3</version>
            <executions>
              <execution>
                <id>pit-report</id>
                <phase>test</phase>
                <goals>
                  <goal>mutationCoverage</goal>
                </goals>
              </execution>
            </executions>
            <dependencies>
              <dependency>
                <groupId>org.pitest</groupId>
                <artifactId>pitest-junit5-plugin</artifactId>
                <version>1.1.2</version>
              </dependency>
            </dependencies>
            <configuration>
              <timestampedReports>false</timestampedReports>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
</project>
