/* @autogenerated */
package org.acme.bootstrap.telemetry;

import java.util.List;

import com.fasterxml.jackson.core.JsonProcessingException;
import com.fasterxml.jackson.databind.ObjectMapper;

import io.quarkus.vertx.http.ManagementInterface;
import io.vertx.ext.web.RoutingContext;
import jakarta.enterprise.event.Observes;
import lombok.RequiredArgsConstructor;

@RequiredArgsConstructor
public class LogManagementResource {
  private final LogManagementService service;
  private final ObjectMapper objectMapper;

  public void registerManagementRoutes(@Observes ManagementInterface mi) {
    mi.router().get("/q/logs").handler(this::handleLogsRequest);
  }

  private void handleLogsRequest(RoutingContext rc) {
    String afterOffset = rc.request().getParam("afterOffset");
    List<LogEntry> logs = service.getLogs(afterOffset);

    try {
      rc.response().putHeader("Content-Type", "application/json")
          .end(objectMapper.writeValueAsString(logs));
    } catch (JsonProcessingException e) {
      rc.response().setStatusCode(500).end();
    }
  }
}
