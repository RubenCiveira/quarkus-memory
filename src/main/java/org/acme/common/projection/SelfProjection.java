/* @autogenerated */
package org.acme.common.projection;

import java.util.HashMap;
import java.util.Map;

import org.eclipse.microprofile.config.inject.ConfigProperty;

import jakarta.enterprise.context.ApplicationScoped;
import jakarta.enterprise.inject.Instance;

@ApplicationScoped
public class SelfProjection {
  private final ExecutionTree tree;

  public SelfProjection(
      @ConfigProperty(name = "app.api.gateway",
          defaultValue = "http://localhost:8090") String serverUrl,
      Instance<ProjectionDescriptor> selfDescriptor) {
    super();

    Map<String, ExecutionNode> pathMap = new HashMap<>();
    selfDescriptor.forEach(descriptor -> {
      descriptor.baseNodes(serverUrl).forEach(area -> {
        pathMap.put(area.getEndpoint(), area);
      });
    });

    this.tree = ExecutionTree.builder().tree(pathMap).build();
  }

  public ExecutionTree getExecutionTree() {
    return tree;
  }

}
