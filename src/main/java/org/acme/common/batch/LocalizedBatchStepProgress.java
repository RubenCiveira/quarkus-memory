/* @autogenerated */
package org.acme.common.batch;

import java.time.Instant;
import java.util.ArrayList;
import java.util.List;
import java.util.Locale;
import java.util.Map;

import org.acme.common.batch.BatchStepProgress.ErrorInfo;
import org.acme.common.batch.BatchStepProgress.Status;
import org.acme.common.validation.AbstractFail.LocalizedFail;

import io.quarkus.runtime.annotations.RegisterForReflection;
import lombok.Builder;
import lombok.Data;

@Data
@Builder
@RegisterForReflection
public class LocalizedBatchStepProgress {
  @Data
  @Builder
  @RegisterForReflection
  public static class LocalizedErrorInfo {
    private String item;
    private List<LocalizedFail> fails;

  }

  private final String name;
  private final String error;
  private final Status status;
  private final Instant startTime;
  private final Instant endTime;
  private final long totalItems;
  private final long processedItems;
  private final List<String> oks;
  private final List<LocalizedErrorInfo> warns;
  private final List<LocalizedErrorInfo> errors;

  public static LocalizedBatchStepProgress from(BatchStepProgress step, Locale locale) {
    return LocalizedBatchStepProgress.builder().name(step.getName()).error(step.getError()).status(step.getStatus())
        .startTime(step.getStartTime()).endTime(step.getEndTime()).totalItems(step.getTotalItems())
        .processedItems(step.getProcessedItems()).errors(mapMap(step.getErrors(), locale))
        .warns(mapMap(step.getWarns(), locale)).oks(step.getOks()).build();
  }

  public static LocalizedErrorInfo from(ErrorInfo info, Locale locale) {
    return LocalizedErrorInfo.builder().fails(null == info.getFails() ? null
        : info.getFails().stream().map(fail -> fail.localize(locale, true)).toList()).build();
  }

  private static List<LocalizedErrorInfo> mapMap(Map<String, ErrorInfo> map, Locale locale) {
    if (null == map) {
      return List.of();
    } else {
      List<LocalizedErrorInfo> result = new ArrayList<>();
      map.entrySet().forEach(entry -> {
        LocalizedErrorInfo localize = from(entry.getValue(), locale);
        localize.setItem(entry.getKey());
        result.add(localize);
      });
      return result;
    }
  }
}
