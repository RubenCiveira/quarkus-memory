/* @autogenerated */
package org.acme.common.batch;

import java.time.Instant;
import java.util.List;
import java.util.Locale;

import org.acme.common.batch.BatchProgress.GlobalStatus;

import io.quarkus.runtime.annotations.RegisterForReflection;
import lombok.Builder;
import lombok.Data;

@Data
@Builder
@RegisterForReflection
public class LocalizedBatchProgress {
  private final String uid;
  private final GlobalStatus status;
  private final Instant startTime;
  private final Instant endTime;
  private final List<LocalizedBatchStepProgress> steps;

  public static LocalizedBatchProgress from(BatchProgress progress, Locale locale) {
    return LocalizedBatchProgress.builder().uid(progress.getUid()).status(progress.getStatus())
        .startTime(progress.getStartTime()).endTime(progress.getEndTime()).steps(progress.getSteps()
            .stream().map(step -> LocalizedBatchStepProgress.from(step, locale)).toList())
        .build();
  }
}
