/* @autogenerated */
package org.acme.common.infrastructure.exceptionmapper;

import java.util.HashMap;
import java.util.Map;

import org.acme.common.exception.NotAllowedException;
import org.acme.common.infrastructure.CurrentRequest;
import jakarta.ws.rs.core.Response;
import jakarta.ws.rs.ext.ExceptionMapper;
import jakarta.ws.rs.ext.Provider;
import lombok.RequiredArgsConstructor;
import lombok.extern.slf4j.Slf4j;

@Slf4j
@Provider
@RequiredArgsConstructor
public class NotAllowedExceptionMapper implements ExceptionMapper<NotAllowedException> {

  private final CurrentRequest restService;

  @Override
  public Response toResponse(NotAllowedException exception) {
    if (log.isDebugEnabled()) {
      log.warn("not allowed", exception);
    } else if (log.isWarnEnabled()) {
      log.warn("not allowed");
    }
    Map<String, String> error = new HashMap<>();
    error.put("reason", exception.getMessage());
    boolean anom = restService.isAnonymous();
    return Response.status(anom ? 401 : 403).entity(error).build();
  }
}
