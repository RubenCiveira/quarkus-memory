/* @autogenerated */
package org.acme.common.infrastructure.exceptionmapper;

import java.util.List;
import java.util.Locale;

import org.acme.common.exception.AbstractFailsException;

import jakarta.ws.rs.core.HttpHeaders;
import jakarta.ws.rs.core.Response;
import jakarta.ws.rs.ext.ExceptionMapper;
import jakarta.ws.rs.ext.Provider;
import lombok.RequiredArgsConstructor;
import lombok.extern.slf4j.Slf4j;

@Slf4j
@Provider
@RequiredArgsConstructor
public class AbstractFailMapper implements ExceptionMapper<AbstractFailsException> {
  private final HttpHeaders headers;

  @Override
  public Response toResponse(AbstractFailsException exception) {
    if (log.isDebugEnabled()) {
      log.info("constraint exception", exception);
    } else if (log.isInfoEnabled()) {
      log.info("constraint fail");
    }
    List<Locale> acceptables = headers.getAcceptableLanguages();
    Locale locale =
        acceptables.isEmpty() ? Locale.getDefault() : headers.getAcceptableLanguages().get(0);

    return Response.status(422).entity(exception.localize(locale, true)).build();
  }
}
