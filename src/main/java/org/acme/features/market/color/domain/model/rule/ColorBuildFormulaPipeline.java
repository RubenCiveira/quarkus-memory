package org.acme.features.market.color.domain.model.rule;

import java.util.Iterator;
import java.util.Optional;
import java.util.Set;

import org.acme.features.market.color.domain.model.Color;
import org.acme.features.market.color.domain.model.Color.ColorBuilder;

public interface ColorBuildFormulaPipeline {

  /**
   * @autogenerated AggregateGenerator
   * @param rules
   * @param colorBuilder
   * @param original
   * @return
   */
  public static ColorBuilder fire(Iterator<ColorBuildFormulaPipeline> rules,
      ColorBuilder colorBuilder, Optional<Color> original) {
    ColorBuilder result = colorBuilder;
    while (rules.hasNext()) {
      result = rules.next().calculate(result, original);
    }
    return result;
  }

  /**
   * @autogenerated AggregateGenerator
   * @param colorBuilder
   * @param original
   * @return
   */
  ColorBuilder calculate(ColorBuilder colorBuilder, Optional<Color> original);

  /**
   * @autogenerated AggregateGenerator
   * @return
   */
  Set<String> fields();
}
