package org.acme.features.market.color.application.service.event;

import java.util.Optional;
import java.util.Set;
import java.util.concurrent.CompletionStage;

import org.acme.common.action.Interaction;
import org.acme.features.market.color.domain.model.ColorRef;

import lombok.Data;
import lombok.EqualsAndHashCode;
import lombok.NonNull;
import lombok.experimental.SuperBuilder;

@Data
@SuperBuilder(toBuilder = true)
@EqualsAndHashCode(callSuper = true, onlyExplicitlyIncluded = true)
public class ColorHiddenFields extends Interaction {

  /**
   * @autogenerated HiddenFieldsGenerator
   */
  private final ColorRef color;

  /**
   * The list of hidden fields
   *
   * @autogenerated HiddenFieldsGenerator
   */
  @NonNull
  private CompletionStage<Set<String>> hidden;

  /**
   * @autogenerated HiddenFieldsGenerator
   * @param fields
   */
  public void add(String... fields) {
    hidden = hidden.thenApply(set -> {
      for (String field : fields) {
        set.add(field);
      }
      return set;
    });
  }

  /**
   * @autogenerated HiddenFieldsGenerator
   * @return
   */
  public Optional<ColorRef> getColor() {
    return Optional.ofNullable(color);
  }
}
