package org.acme.features.market.color.application.service;

import java.util.concurrent.CompletableFuture;
import java.util.concurrent.CompletionStage;

import org.acme.common.action.Interaction;
import org.acme.features.market.color.application.ColorDto;
import org.acme.features.market.color.application.service.event.ColorFormulaBuilder;
import org.acme.features.market.color.domain.model.Color;

import jakarta.enterprise.context.RequestScoped;
import jakarta.enterprise.event.Event;
import lombok.RequiredArgsConstructor;

@RequestScoped
@RequiredArgsConstructor
public class ColorsFormulaService {

  /**
   * Event source for maniputale the visible list
   *
   * @autogenerated FormulaServiceGenerator
   */
  private final Event<ColorFormulaBuilder> formulaBuilder;

  /**
   * The input entity with the copy values without hidden
   *
   * @autogenerated FormulaServiceGenerator
   * @param prev The source interaction
   * @param original The source interaction
   * @param source The source interaction
   * @return The input entity with the copy values without hidden
   */
  public CompletionStage<ColorDto> copyWithFormulas(Interaction prev, Color original,
      ColorDto source) {
    ColorFormulaBuilder formulas = ColorFormulaBuilder.builder()
        .dto(CompletableFuture.completedFuture(source)).original(original).build(prev);
    formulaBuilder.fire(formulas);
    return formulas.getDto();
  }

  /**
   * The input entity with the copy values without hidden
   *
   * @autogenerated FormulaServiceGenerator
   * @param prev The source interaction
   * @param source The source interaction
   * @return The input entity with the copy values without hidden
   */
  public CompletionStage<ColorDto> copyWithFormulas(Interaction prev, ColorDto source) {
    ColorFormulaBuilder formulas =
        ColorFormulaBuilder.builder().dto(CompletableFuture.completedFuture(source)).build(prev);
    formulaBuilder.fire(formulas);
    return formulas.getDto();
  }
}
