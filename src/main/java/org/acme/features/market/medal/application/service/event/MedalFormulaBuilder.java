package org.acme.features.market.medal.application.service.event;

import java.util.Optional;
import java.util.concurrent.CompletionStage;
import java.util.function.Consumer;

import org.acme.common.action.Interaction;
import org.acme.features.market.medal.application.MedalDto;
import org.acme.features.market.medal.domain.model.Medal;

import lombok.Data;
import lombok.EqualsAndHashCode;
import lombok.NonNull;
import lombok.experimental.SuperBuilder;

@Data
@SuperBuilder(toBuilder = true)
@EqualsAndHashCode(callSuper = true, onlyExplicitlyIncluded = true)
public class MedalFormulaBuilder extends Interaction {

  /**
   * @autogenerated VisibleContentGenerator
   */
  Medal original;

  /**
   * @autogenerated VisibleContentGenerator
   */
  @NonNull
  private CompletionStage<MedalDto> dto;

  /**
   * @autogenerated VisibleContentGenerator
   * @return
   */
  public Optional<Medal> getOriginal() {
    return Optional.ofNullable(original);
  }

  /**
   * @autogenerated VisibleContentGenerator
   * @param mapper
   */
  public void tap(Consumer<MedalDto> mapper) {
    dto = dto.thenApply(dto -> {
      mapper.accept(dto);
      return dto;
    });
  }
}
