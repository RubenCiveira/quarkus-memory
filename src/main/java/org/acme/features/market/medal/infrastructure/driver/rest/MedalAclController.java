package org.acme.features.market.medal.infrastructure.driver.rest;

import java.util.ArrayList;

import org.acme.common.action.Interaction;
import org.acme.common.infrastructure.CurrentRequest;
import org.acme.common.security.Allow;
import org.acme.features.market.medal.application.service.MedalsVisibilityService;
import org.acme.features.market.medal.application.usecase.create.CreateMedalUsecase;
import org.acme.features.market.medal.application.usecase.delete.DeleteMedalUsecase;
import org.acme.features.market.medal.application.usecase.list.ListMedalUsecase;
import org.acme.features.market.medal.application.usecase.retrieve.RetrieveMedalUsecase;
import org.acme.features.market.medal.application.usecase.update.UpdateMedalUsecase;
import org.acme.generated.openapi.api.MedalAclApi;
import org.acme.generated.openapi.model.CommonAllow;
import org.acme.generated.openapi.model.MedalAclFields;
import org.acme.generated.openapi.model.MedalAclGenericAllows;
import org.acme.generated.openapi.model.MedalAclSpecificAllows;
import org.acme.generated.openapi.model.MedalGenericAcl;
import org.acme.generated.openapi.model.MedalSpecificAcl;

import jakarta.enterprise.context.RequestScoped;
import jakarta.ws.rs.core.Response;
import lombok.RequiredArgsConstructor;

@RequestScoped
@RequiredArgsConstructor
public class MedalAclController implements MedalAclApi {

  /**
   * @autogenerated AclControllerGenerator
   */
  private final CreateMedalUsecase create;

  /**
   * Medal
   *
   * @autogenerated AclControllerGenerator
   */
  private final CurrentRequest currentRequest;

  /**
   * @autogenerated AclControllerGenerator
   */
  private final DeleteMedalUsecase delete;

  /**
   * @autogenerated AclControllerGenerator
   */
  private final ListMedalUsecase list;

  /**
   * @autogenerated AclControllerGenerator
   */
  private final RetrieveMedalUsecase retrieve;

  /**
   * @autogenerated AclControllerGenerator
   */
  private final UpdateMedalUsecase update;

  /**
   * @autogenerated AclControllerGenerator
   */
  private final MedalsVisibilityService visibility;

  /**
   * @autogenerated AclControllerGenerator
   * @param uid
   * @return
   */
  @Override
  public Response medalApiContextualAcl(final String uid) {
    Interaction interaction = currentRequest.interaction();
    MedalSpecificAcl response = new MedalSpecificAcl();
    response.setAllows(new MedalAclSpecificAllows());
    response.setFields(new MedalAclFields());
    response.getFields().setNoEditables(new ArrayList<>());
    response.getFields().setNoVisibles(new ArrayList<>());
    fixedFields(response.getFields(), interaction);
    hiddenFields(response.getFields(), interaction);
    updateAllows(response, interaction);
    deleteAllows(response, interaction);
    retrieveAllows(response, interaction);
    return Response.ok(response).build();
  }

  /**
   * @autogenerated AclControllerGenerator
   * @return
   */
  @Override
  public Response medalApiGenericAcl() {
    Interaction interaction = currentRequest.interaction();
    MedalGenericAcl response = new MedalGenericAcl();
    response.setAllows(new MedalAclGenericAllows());
    response.setFields(new MedalAclFields());
    response.getFields().setNoEditables(new ArrayList<>());
    response.getFields().setNoVisibles(new ArrayList<>());
    fixedFields(response.getFields(), interaction);
    hiddenFields(response.getFields(), interaction);
    listAllows(response, interaction);
    createAllows(response, interaction);
    updateAllows(response, interaction);
    deleteAllows(response, interaction);
    retrieveAllows(response, interaction);
    return Response.ok(response).build();
  }

  /**
   * @autogenerated AclControllerGenerator
   * @param response
   * @param query
   */
  private void createAllows(final MedalGenericAcl response, final Interaction query) {
    Allow detail = create.allow(query);
    response.getAllows()
        .setCreate(new CommonAllow().allowed(detail.isAllowed()).reason(detail.getDescription()));
  }

  /**
   * @autogenerated AclControllerGenerator
   * @param response
   * @param query
   */
  private void deleteAllows(final MedalGenericAcl response, final Interaction query) {
    Allow detail = delete.allow(query);
    response.getAllows()
        .setDelete(new CommonAllow().allowed(detail.isAllowed()).reason(detail.getDescription()));
  }

  /**
   * @autogenerated AclControllerGenerator
   * @param response
   * @param query
   */
  private void deleteAllows(final MedalSpecificAcl response, final Interaction query) {
    Allow detail = delete.allow(query);
    response.getAllows()
        .setDelete(new CommonAllow().allowed(detail.isAllowed()).reason(detail.getDescription()));
  }

  /**
   * @autogenerated AclControllerGenerator
   * @param response
   * @param query
   */
  private void fixedFields(final MedalAclFields response, final Interaction query) {
    visibility.fieldsToFix(query).forEach(field -> response.getNoEditables().add(field));
  }

  /**
   * @autogenerated AclControllerGenerator
   * @param response
   * @param query
   */
  private void hiddenFields(final MedalAclFields response, final Interaction query) {
    visibility.fieldsToHide(query).forEach(field -> response.getNoVisibles().add(field));;
  }

  /**
   * @autogenerated AclControllerGenerator
   * @param response
   * @param query
   */
  private void listAllows(final MedalGenericAcl response, final Interaction query) {
    Allow detail = list.allow(query);
    response.getAllows()
        .setList(new CommonAllow().allowed(detail.isAllowed()).reason(detail.getDescription()));
  }

  /**
   * @autogenerated AclControllerGenerator
   * @param response
   * @param query
   */
  private void retrieveAllows(final MedalGenericAcl response, final Interaction query) {
    Allow detail = retrieve.allow(query);
    response.getAllows()
        .setRetrieve(new CommonAllow().allowed(detail.isAllowed()).reason(detail.getDescription()));
  }

  /**
   * @autogenerated AclControllerGenerator
   * @param response
   * @param query
   */
  private void retrieveAllows(final MedalSpecificAcl response, final Interaction query) {
    Allow detail = retrieve.allow(query);
    response.getAllows()
        .setRetrieve(new CommonAllow().allowed(detail.isAllowed()).reason(detail.getDescription()));
  }

  /**
   * @autogenerated AclControllerGenerator
   * @param response
   * @param query
   */
  private void updateAllows(final MedalGenericAcl response, final Interaction query) {
    Allow detail = update.allow(query);
    response.getAllows()
        .setUpdate(new CommonAllow().allowed(detail.isAllowed()).reason(detail.getDescription()));
  }

  /**
   * @autogenerated AclControllerGenerator
   * @param response
   * @param query
   */
  private void updateAllows(final MedalSpecificAcl response, final Interaction query) {
    Allow detail = update.allow(query);
    response.getAllows()
        .setUpdate(new CommonAllow().allowed(detail.isAllowed()).reason(detail.getDescription()));
  }
}
