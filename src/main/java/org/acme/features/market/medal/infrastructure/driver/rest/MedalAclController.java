package org.acme.features.market.medal.infrastructure.driver.rest;

import java.util.ArrayList;
import java.util.concurrent.CompletableFuture;

import org.acme.common.action.Interaction;
import org.acme.common.rest.CurrentRequest;
import org.acme.features.market.medal.application.service.MedalsVisibilityService;
import org.acme.features.market.medal.application.usecase.create.CreateMedalUsecase;
import org.acme.features.market.medal.application.usecase.delete.DeleteMedalUsecase;
import org.acme.features.market.medal.application.usecase.list.ListMedalUsecase;
import org.acme.features.market.medal.application.usecase.retrieve.RetrieveMedalUsecase;
import org.acme.features.market.medal.application.usecase.update.UpdateMedalUsecase;
import org.acme.generated.openapi.api.MedalAclApi;
import org.acme.generated.openapi.model.CommonAllow;
import org.acme.generated.openapi.model.MedalAclFields;
import org.acme.generated.openapi.model.MedalAclGenericAllows;
import org.acme.generated.openapi.model.MedalAclSpecificAllows;
import org.acme.generated.openapi.model.MedalGenericAcl;
import org.acme.generated.openapi.model.MedalSpecificAcl;

import jakarta.enterprise.context.RequestScoped;
import jakarta.ws.rs.core.Response;
import lombok.RequiredArgsConstructor;

@RequestScoped
@RequiredArgsConstructor
public class MedalAclController implements MedalAclApi {

  /**
   * @autogenerated AclControllerGenerator
   */
  private final CreateMedalUsecase create;

  /**
   * Medal
   *
   * @autogenerated AclControllerGenerator
   */
  private final CurrentRequest currentRequest;

  /**
   * @autogenerated AclControllerGenerator
   */
  private final DeleteMedalUsecase delete;

  /**
   * @autogenerated AclControllerGenerator
   */
  private final ListMedalUsecase list;

  /**
   * @autogenerated AclControllerGenerator
   */
  private final RetrieveMedalUsecase retrieve;

  /**
   * @autogenerated AclControllerGenerator
   */
  private final UpdateMedalUsecase update;

  /**
   * @autogenerated AclControllerGenerator
   */
  private final MedalsVisibilityService visibility;

  /**
   * @autogenerated AclControllerGenerator
   * @param uid
   * @return
   */
  @Override
  public Response medalApiContextualAcl(final String uid) {
    return currentRequest.resolve(interaction -> {
      MedalSpecificAcl response = new MedalSpecificAcl();
      response.setAllows(new MedalAclSpecificAllows());
      response.setFields(new MedalAclFields());
      return CompletableFuture
          .allOf(fixedFields(response.getFields(), interaction),
              hiddenFields(response.getFields(), interaction), updateAllows(response, interaction),
              deleteAllows(response, interaction), retrieveAllows(response, interaction))
          .thenApply(noop -> response);
    });
  }

  /**
   * @autogenerated AclControllerGenerator
   * @return
   */
  @Override
  public Response medalApiGenericAcl() {
    return currentRequest.resolve(interaction -> {
      MedalGenericAcl response = new MedalGenericAcl();
      response.setAllows(new MedalAclGenericAllows());
      response.setFields(new MedalAclFields());
      return CompletableFuture
          .allOf(fixedFields(response.getFields(), interaction),
              hiddenFields(response.getFields(), interaction), listAllows(response, interaction),
              createAllows(response, interaction), updateAllows(response, interaction),
              deleteAllows(response, interaction), retrieveAllows(response, interaction))
          .thenApply(noop -> response);
    });
  }

  /**
   * @autogenerated AclControllerGenerator
   * @param response
   * @param query
   * @return
   */
  private CompletableFuture<Void> createAllows(final MedalGenericAcl response,
      final Interaction query) {
    return create.allow(query)
        .thenAccept(detail -> response.getAllows().setCreate(
            new CommonAllow().allowed(detail.isAllowed()).reason(detail.getDescription())))
        .toCompletableFuture();
  }

  /**
   * @autogenerated AclControllerGenerator
   * @param response
   * @param query
   * @return
   */
  private CompletableFuture<Void> deleteAllows(final MedalGenericAcl response,
      final Interaction query) {
    return delete.allow(query)
        .thenAccept(detail -> response.getAllows().setDelete(
            new CommonAllow().allowed(detail.isAllowed()).reason(detail.getDescription())))
        .toCompletableFuture();
  }

  /**
   * @autogenerated AclControllerGenerator
   * @param response
   * @param query
   * @return
   */
  private CompletableFuture<Void> deleteAllows(final MedalSpecificAcl response,
      final Interaction query) {
    return delete.allow(query)
        .thenAccept(detail -> response.getAllows().setDelete(
            new CommonAllow().allowed(detail.isAllowed()).reason(detail.getDescription())))
        .toCompletableFuture();
  }

  /**
   * @autogenerated AclControllerGenerator
   * @param response
   * @param query
   * @return
   */
  private CompletableFuture<Void> fixedFields(final MedalAclFields response,
      final Interaction query) {
    return visibility.fieldsToFix(query).getFixed()
        .thenAccept(fields -> response.setNoEditables(new ArrayList<>(fields)))
        .toCompletableFuture();
  }

  /**
   * @autogenerated AclControllerGenerator
   * @param response
   * @param query
   * @return
   */
  private CompletableFuture<Void> hiddenFields(final MedalAclFields response,
      final Interaction query) {
    return visibility.fieldsToHide(query).getHidden()
        .thenAccept(fields -> response.setNoVisibles(new ArrayList<>(fields)))
        .toCompletableFuture();
  }

  /**
   * @autogenerated AclControllerGenerator
   * @param response
   * @param query
   * @return
   */
  private CompletableFuture<Void> listAllows(final MedalGenericAcl response,
      final Interaction query) {
    return list.allow(query)
        .thenAccept(detail -> response.getAllows()
            .setList(new CommonAllow().allowed(detail.isAllowed()).reason(detail.getDescription())))
        .toCompletableFuture();
  }

  /**
   * @autogenerated AclControllerGenerator
   * @param response
   * @param query
   * @return
   */
  private CompletableFuture<Void> retrieveAllows(final MedalGenericAcl response,
      final Interaction query) {
    return retrieve.allow(query)
        .thenAccept(detail -> response.getAllows().setRetrieve(
            new CommonAllow().allowed(detail.isAllowed()).reason(detail.getDescription())))
        .toCompletableFuture();
  }

  /**
   * @autogenerated AclControllerGenerator
   * @param response
   * @param query
   * @return
   */
  private CompletableFuture<Void> retrieveAllows(final MedalSpecificAcl response,
      final Interaction query) {
    return retrieve.allow(query)
        .thenAccept(detail -> response.getAllows().setRetrieve(
            new CommonAllow().allowed(detail.isAllowed()).reason(detail.getDescription())))
        .toCompletableFuture();
  }

  /**
   * @autogenerated AclControllerGenerator
   * @param response
   * @param query
   * @return
   */
  private CompletableFuture<Void> updateAllows(final MedalGenericAcl response,
      final Interaction query) {
    return update.allow(query)
        .thenAccept(detail -> response.getAllows().setUpdate(
            new CommonAllow().allowed(detail.isAllowed()).reason(detail.getDescription())))
        .toCompletableFuture();
  }

  /**
   * @autogenerated AclControllerGenerator
   * @param response
   * @param query
   * @return
   */
  private CompletableFuture<Void> updateAllows(final MedalSpecificAcl response,
      final Interaction query) {
    return update.allow(query)
        .thenAccept(detail -> response.getAllows().setUpdate(
            new CommonAllow().allowed(detail.isAllowed()).reason(detail.getDescription())))
        .toCompletableFuture();
  }
}
