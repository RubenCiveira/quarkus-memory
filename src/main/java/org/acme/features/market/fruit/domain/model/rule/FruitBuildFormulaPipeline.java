package org.acme.features.market.fruit.domain.model.rule;

import java.util.Iterator;
import java.util.Optional;
import java.util.Set;

import org.acme.features.market.fruit.domain.model.Fruit;
import org.acme.features.market.fruit.domain.model.Fruit.FruitBuilder;

public interface FruitBuildFormulaPipeline {

  /**
   * @autogenerated AggregateGenerator
   * @param rules
   * @param fruitBuilder
   * @param original
   * @return
   */
  public static FruitBuilder fire(Iterator<FruitBuildFormulaPipeline> rules,
      FruitBuilder fruitBuilder, Optional<Fruit> original) {
    FruitBuilder result = fruitBuilder;
    while (rules.hasNext()) {
      result = rules.next().calculate(result, original);
    }
    return result;
  }

  /**
   * @autogenerated AggregateGenerator
   * @param fruitBuilder
   * @param original
   * @return
   */
  FruitBuilder calculate(FruitBuilder fruitBuilder, Optional<Fruit> original);

  /**
   * @autogenerated AggregateGenerator
   * @return
   */
  Set<String> fields();
}
