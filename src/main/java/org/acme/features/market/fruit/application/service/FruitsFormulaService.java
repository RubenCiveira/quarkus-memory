package org.acme.features.market.fruit.application.service;

import org.acme.common.action.Interaction;
import org.acme.features.market.fruit.application.FruitDto;
import org.acme.features.market.fruit.application.service.event.FruitFormulaBuilderPipelineStageEvent;
import org.acme.features.market.fruit.domain.model.Fruit;
import io.opentelemetry.api.trace.Tracer;
import jakarta.enterprise.context.RequestScoped;
import jakarta.enterprise.event.Event;
import lombok.RequiredArgsConstructor;

@RequestScoped
@RequiredArgsConstructor
public class FruitsFormulaService {

  /**
   * Event source for maniputale the visible list
   *
   * @autogenerated FormulaServiceGenerator
   */
  private final Event<FruitFormulaBuilderPipelineStageEvent> formulaBuilder;

  /**
   * @autogenerated FormulaServiceGenerator
   */
  private final Tracer tracer;

  /**
   * The input entity with the copy values without hidden
   *
   * @autogenerated FormulaServiceGenerator
   * @param prev The source interaction
   * @param original The source interaction
   * @param source The source interaction
   * @return The input entity with the copy values without hidden
   */
  public FruitDto copyWithFormulas(Interaction prev, Fruit original, FruitDto source) {
    FruitFormulaBuilderPipelineStageEvent formulas = FruitFormulaBuilderPipelineStageEvent.builder()
        .dto(source).original(original).interaction(prev).build();
    formulaBuilder.fire(formulas);
    return formulas.getDto();
  }

  /**
   * The input entity with the copy values without hidden
   *
   * @autogenerated FormulaServiceGenerator
   * @param prev The source interaction
   * @param source The source interaction
   * @return The input entity with the copy values without hidden
   */
  public FruitDto copyWithFormulas(Interaction prev, FruitDto source) {
    FruitFormulaBuilderPipelineStageEvent formulas = FruitFormulaBuilderPipelineStageEvent.builder()
        .dto(source).interaction(prev).build();
    formulaBuilder.fire(formulas);
    return formulas.getDto();
  }
}
