package org.acme.features.market.fruit.application.service.proposal;

import org.acme.common.action.Interaction;
import org.acme.features.market.fruit.domain.model.FruitRef;

import jakarta.enterprise.event.Event;
import lombok.Data;
import lombok.EqualsAndHashCode;
import lombok.NonNull;
import lombok.experimental.SuperBuilder;

@Data
@SuperBuilder(toBuilder = true)
@EqualsAndHashCode(onlyExplicitlyIncluded = true)
public abstract class FruitRemoveProposal {

  /**
   * @autogenerated VisibleContentProposalGenerator
   * @param emitter
   * @param proposal
   * @return
   */
  @SuppressWarnings("unchecked")
  public static FruitRef resolveWith(final Event<? extends FruitRemoveProposal> emitter,
      final FruitRemoveProposal proposal) {
    ((Event<FruitRemoveProposal>) emitter).fire(proposal);
    return proposal.getReference();
  }

  /**
   * @autogenerated VisibleContentProposalGenerator
   */
  @NonNull
  private final Interaction interaction;

  /**
   * @autogenerated VisibleContentProposalGenerator
   */
  @NonNull
  private FruitRef reference;
}
