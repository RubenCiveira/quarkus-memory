package org.acme.features.market.fruit.domain.interaction.result;

import java.util.Optional;

import org.acme.common.action.Interaction;
import org.acme.features.market.fruit.domain.interaction.FruitDto;
import org.acme.features.market.fruit.domain.model.Fruit;

import io.quarkus.runtime.annotations.RegisterForReflection;
import lombok.Data;
import lombok.EqualsAndHashCode;
import lombok.experimental.SuperBuilder;

@Data
@SuperBuilder(toBuilder = true)
@EqualsAndHashCode(callSuper = true, onlyExplicitlyIncluded = true)
@RegisterForReflection
public class FruitRetrieveResult extends Interaction {

  /**
   * A new dto with a result list
   *
   * @autogenerated EntityGenerator
   * @param prev The source interaction responsible of generating the dto
   * @param fruit The list with values
   * @return A new dto with a result list
   */
  public static FruitRetrieveResult from(final Interaction prev, final Optional<Fruit> fruit) {
    return FruitRetrieveResult.builder().fruit(fruit.map(FruitDto::from)).build(prev);
  }

  /**
   * A new dto with a result list
   *
   * @autogenerated EntityGenerator
   * @param prev The source interaction responsible of generating the dto
   * @param fruit The list with values
   * @return A new dto with a result list
   */
  public static FruitRetrieveResult fromDto(final Interaction prev,
      final Optional<FruitDto> fruit) {
    return FruitRetrieveResult.builder().fruit(fruit).build(prev);
  }

  /**
   * The result content list
   *
   * @autogenerated EntityGenerator
   */
  private final Optional<FruitDto> fruit;
}
