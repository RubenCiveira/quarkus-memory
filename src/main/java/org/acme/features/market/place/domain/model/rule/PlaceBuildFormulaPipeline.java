package org.acme.features.market.place.domain.model.rule;

import java.util.Iterator;
import java.util.Optional;
import java.util.Set;

import org.acme.features.market.place.domain.model.Place;
import org.acme.features.market.place.domain.model.Place.PlaceBuilder;

public interface PlaceBuildFormulaPipeline {

  /**
   * @autogenerated AggregateGenerator
   * @param rules
   * @param placeBuilder
   * @param original
   * @return
   */
  public static PlaceBuilder fire(Iterator<PlaceBuildFormulaPipeline> rules,
      PlaceBuilder placeBuilder, Optional<Place> original) {
    PlaceBuilder result = placeBuilder;
    while (rules.hasNext()) {
      result = rules.next().calculate(result, original);
    }
    return result;
  }

  /**
   * @autogenerated AggregateGenerator
   * @param placeBuilder
   * @param original
   * @return
   */
  PlaceBuilder calculate(PlaceBuilder placeBuilder, Optional<Place> original);

  /**
   * @autogenerated AggregateGenerator
   * @return
   */
  Set<String> fields();
}
