package org.acme.features.market.place.application.service.event;

import java.util.Optional;
import java.util.function.Consumer;

import org.acme.common.action.Interaction;
import org.acme.features.market.place.application.PlaceDto;
import org.acme.features.market.place.domain.model.Place;

import lombok.Builder;
import lombok.Data;
import lombok.EqualsAndHashCode;
import lombok.NonNull;
import lombok.With;

@Data
@Builder(toBuilder = true)
@With
@EqualsAndHashCode(onlyExplicitlyIncluded = true)
public class PlaceFormulaBuilderPipelineEvent {

  /**
   * @autogenerated FormulaBuilderPipelineEventGenerator
   */
  @NonNull
  private final Interaction interaction;

  /**
   * @autogenerated FormulaBuilderPipelineEventGenerator
   */
  @NonNull
  private PlaceDto dto;

  /**
   * @autogenerated FormulaBuilderPipelineEventGenerator
   */
  private Place original;

  /**
   * @autogenerated FormulaBuilderPipelineEventGenerator
   * @return
   */
  public Optional<Place> getOriginal() {
    return Optional.ofNullable(original);
  }

  /**
   * @autogenerated FormulaBuilderPipelineEventGenerator
   * @param mapper
   */
  public void peek(Consumer<PlaceDto> mapper) {
    mapper.accept(dto);
  }
}
