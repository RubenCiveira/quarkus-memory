package org.acme.features.market.verify.application.service;

import java.util.concurrent.CompletableFuture;
import java.util.concurrent.CompletionStage;

import org.acme.common.action.Interaction;
import org.acme.features.market.verify.application.VerifyDto;
import org.acme.features.market.verify.application.service.event.VerifyFormulaBuilderPipelineStageEvent;
import org.acme.features.market.verify.domain.model.Verify;

import jakarta.enterprise.context.RequestScoped;
import jakarta.enterprise.event.Event;
import lombok.RequiredArgsConstructor;

@RequestScoped
@RequiredArgsConstructor
public class VerifysFormulaService {

  /**
   * Event source for maniputale the visible list
   *
   * @autogenerated FormulaServiceGenerator
   */
  private final Event<VerifyFormulaBuilderPipelineStageEvent> formulaBuilder;

  /**
   * The input entity with the copy values without hidden
   *
   * @autogenerated FormulaServiceGenerator
   * @param prev The source interaction
   * @param original The source interaction
   * @param source The source interaction
   * @return The input entity with the copy values without hidden
   */
  public CompletionStage<VerifyDto> copyWithFormulas(Interaction prev, Verify original,
      VerifyDto source) {
    VerifyFormulaBuilderPipelineStageEvent formulas = VerifyFormulaBuilderPipelineStageEvent
        .builder().dto(CompletableFuture.completedFuture(source)).original(original)
        .interaction(prev).build();
    formulaBuilder.fire(formulas);
    return formulas.getDto();
  }

  /**
   * The input entity with the copy values without hidden
   *
   * @autogenerated FormulaServiceGenerator
   * @param prev The source interaction
   * @param source The source interaction
   * @return The input entity with the copy values without hidden
   */
  public CompletionStage<VerifyDto> copyWithFormulas(Interaction prev, VerifyDto source) {
    VerifyFormulaBuilderPipelineStageEvent formulas = VerifyFormulaBuilderPipelineStageEvent
        .builder().dto(CompletableFuture.completedFuture(source)).interaction(prev).build();
    formulaBuilder.fire(formulas);
    return formulas.getDto();
  }
}
