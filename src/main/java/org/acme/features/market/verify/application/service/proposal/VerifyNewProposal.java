package org.acme.features.market.verify.application.service.proposal;

import java.util.function.Consumer;
import java.util.function.UnaryOperator;

import org.acme.common.action.Interaction;
import org.acme.features.market.verify.application.VerifyDto;

import jakarta.enterprise.event.Event;
import lombok.Data;
import lombok.EqualsAndHashCode;
import lombok.NonNull;
import lombok.experimental.SuperBuilder;

@Data
@SuperBuilder(toBuilder = true)
@EqualsAndHashCode(onlyExplicitlyIncluded = true)
public abstract class VerifyNewProposal {

  /**
   * @autogenerated VisibleContentProposalGenerator
   * @param emitter
   * @param proposal
   * @return
   */
  @SuppressWarnings("unchecked")
  public static VerifyDto resolveWith(final Event<? extends VerifyNewProposal> emitter,
      final VerifyNewProposal proposal) {
    ((Event<VerifyNewProposal>) emitter).fire(proposal);
    return proposal.getDto();
  }

  /**
   * @autogenerated VisibleContentProposalGenerator
   */
  @NonNull
  private final Interaction interaction;

  /**
   * @autogenerated VisibleContentProposalGenerator
   */
  @NonNull
  private VerifyDto dto;

  /**
   * @autogenerated VisibleContentProposalGenerator
   * @param mapper
   */
  public void map(UnaryOperator<VerifyDto> mapper) {
    dto = mapper.apply(dto);
  }

  /**
   * @autogenerated VisibleContentProposalGenerator
   * @param mapper
   */
  public void peek(Consumer<VerifyDto> mapper) {
    mapper.accept(dto);
  }
}
