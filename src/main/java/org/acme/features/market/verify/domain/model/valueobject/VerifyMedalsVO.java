package org.acme.features.market.verify.domain.model.valueobject;

import java.util.List;

import org.acme.common.exception.ConstraintException;
import org.acme.common.validation.AbstractFailList;
import org.acme.common.validation.ConstraintFail;
import org.acme.common.validation.ConstraintFailList;
import org.acme.features.market.verify.domain.model.VerifyMedal;

import lombok.EqualsAndHashCode;
import lombok.Getter;
import lombok.RequiredArgsConstructor;
import lombok.ToString;
import lombok.With;

@Getter
@ToString
@RequiredArgsConstructor
@With
@EqualsAndHashCode(onlyExplicitlyIncluded = true)
public class VerifyMedalsVO {

  /**
   * An empty instance
   *
   * @autogenerated ValueObjectGenerator
   * @param medals
   * @return An empty instance
   */
  public static VerifyMedalsVO from(final List<VerifyMedal> medals) {
    return tryFrom(medals);
  }

  /**
   * An empty instance
   *
   * @autogenerated ValueObjectGenerator
   * @param medals
   * @return An empty instance
   */
  public static VerifyMedalsVO tryFrom(final Object medals) {
    ConstraintFailList list = new ConstraintFailList();
    VerifyMedalsVO result = tryFrom(medals, list);
    if (list.hasErrors()) {
      throw new ConstraintException(list);
    }
    return result;
  }

  /**
   * An empty instance
   *
   * @autogenerated ValueObjectGenerator
   * @param medals temptative value
   * @param fails Error list
   * @return An empty instance
   */
  @SuppressWarnings("unchecked")
  public static <T extends AbstractFailList> VerifyMedalsVO tryFrom(final Object medals,
      final T fails) {
    if (null == medals) {
      fails.add(new ConstraintFail("not-null", "medals", null, "Cant be null"));
      return null;
    } else if (medals instanceof List) {
      return new VerifyMedalsVO((List<VerifyMedal>) medals);
    } else {
      fails.add(new ConstraintFail("wrong-type", "medals", medals.getClass(),
          "A List<VerifyMedal> type is expected for medals"));
      return null;
    }
  }

  /**
   * El medals de verify
   *
   * @autogenerated ValueObjectGenerator
   */
  private final List<VerifyMedal> value;

  /**
   * @autogenerated ValueObjectGenerator
   * @return
   */
  public List<VerifyMedal> getValue() {
    return value;
  }
}
