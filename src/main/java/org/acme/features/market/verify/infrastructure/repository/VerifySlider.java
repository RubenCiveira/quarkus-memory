package org.acme.features.market.verify.infrastructure.repository;

import java.util.Iterator;
import java.util.List;
import java.util.function.BiFunction;

import org.acme.common.algorithms.Slider;
import org.acme.features.market.verify.domain.gateway.VerifyCursor;
import org.acme.features.market.verify.domain.gateway.VerifyFilter;
import org.acme.features.market.verify.domain.model.Verify;

class VerifySlider extends Slider<Verify> {

  /**
   * @autogenerated SlideGenerator
   */
  private final VerifyCursor cursor;

  /**
   * @autogenerated SlideGenerator
   */
  private final VerifyFilter filter;

  /**
   * @autogenerated SlideGenerator
   */
  private final BiFunction<VerifyFilter, VerifyCursor, Iterator<Verify>> gateway;

  /**
   * @autogenerated SlideGenerator
   * @param multi
   * @param limit
   * @param gateway
   * @param filter
   * @param cursor
   */
  VerifySlider(final Iterator<Verify> multi, final int limit,
      final BiFunction<VerifyFilter, VerifyCursor, Iterator<Verify>> gateway,
      final VerifyFilter filter, final VerifyCursor cursor) {
    super(multi, limit);
    this.gateway = gateway;
    this.filter = filter;
    this.cursor = cursor;
  }

  /**
   * @autogenerated SlideGenerator
   * @param verifys
   * @param limit
   * @return
   */
  @Override
  public Iterator<Verify> next(List<Verify> verifys, int limit) {
    Verify last = verifys.get(verifys.size() - 1);
    VerifyCursor cr = this.cursor.withSinceUid(last.getUid().getValue()).withLimit(limit);
    return gateway.apply(this.filter, cr);
  }
}
