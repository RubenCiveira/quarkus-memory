package org.acme.features.market.verify.infrastructure.driven;

import java.util.Optional;

import javax.sql.DataSource;

import org.acme.common.algorithms.Slider;
import org.acme.features.market.verify.domain.gateway.VerifyCursor;
import org.acme.features.market.verify.domain.gateway.VerifyFilter;
import org.acme.features.market.verify.domain.gateway.VerifyReadRepositoryGateway;
import org.acme.features.market.verify.domain.model.Verify;
import org.acme.features.market.verify.domain.model.VerifyRef;
import org.acme.features.market.verify.infrastructure.repository.VerifyRepository;

import jakarta.enterprise.context.RequestScoped;

@RequestScoped
public class VerifyReadGatewayAdapter implements VerifyReadRepositoryGateway {

  /**
   * @autogenerated ReadAdaterGatewayGenerator
   */
  private final VerifyRepository repository;

  /**
   * @autogenerated ReadAdaterGatewayGenerator
   * @param readSource
   */
  public VerifyReadGatewayAdapter(final DataSource readSource) {
    this.repository = new VerifyRepository(readSource);
  }

  /**
   * @autogenerated ReadAdaterGatewayGenerator
   * @param reference
   * @return
   */
  @Override
  public Verify enrich(VerifyRef reference) {
    return repository.enrich(reference);
  }

  /**
   * @autogenerated ReadAdaterGatewayGenerator
   * @param uid
   * @param filter
   * @return
   */
  @Override
  public boolean exists(String uid, Optional<VerifyFilter> filter) {
    return repository.exists(uid, filter);
  }

  /**
   * @autogenerated ReadAdaterGatewayGenerator
   * @param filter
   * @param cursor
   * @return
   */
  @Override
  public Slider<Verify> list(VerifyFilter filter, VerifyCursor cursor) {
    return repository.list(filter, cursor);
  }

  /**
   * @autogenerated ReadAdaterGatewayGenerator
   * @param uid
   * @param filter
   * @return
   */
  @Override
  public Optional<Verify> retrieve(String uid, Optional<VerifyFilter> filter) {
    return repository.retrieve(uid, filter);
  }
}
