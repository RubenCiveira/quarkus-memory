package org.acme.features.market.area.infrastructure.repository;

import java.util.Iterator;
import java.util.List;
import java.util.function.BiFunction;

import org.acme.common.algorithms.Slider;
import org.acme.features.market.area.domain.gateway.AreaCursor;
import org.acme.features.market.area.domain.gateway.AreaFilter;
import org.acme.features.market.area.domain.model.Area;

class AreaSlider extends Slider<Area> {

  /**
   * @autogenerated SlideGenerator
   */
  private final AreaCursor cursor;

  /**
   * @autogenerated SlideGenerator
   */
  private final AreaFilter filter;

  /**
   * @autogenerated SlideGenerator
   */
  private final BiFunction<AreaFilter, AreaCursor, Iterator<Area>> gateway;

  /**
   * @autogenerated SlideGenerator
   * @param multi
   * @param limit
   * @param gateway
   * @param filter
   * @param cursor
   */
  AreaSlider(final Iterator<Area> multi, final int limit,
      final BiFunction<AreaFilter, AreaCursor, Iterator<Area>> gateway, final AreaFilter filter,
      final AreaCursor cursor) {
    super(multi, limit);
    this.gateway = gateway;
    this.filter = filter;
    this.cursor = cursor;
  }

  /**
   * @autogenerated SlideGenerator
   * @param areas
   * @param limit
   * @return
   */
  @Override
  public Iterator<Area> next(List<Area> areas, int limit) {
    Area last = areas.get(areas.size() - 1);
    AreaCursor cr = this.cursor.withSinceUid(last.getUid().getValue()).withLimit(limit);
    return gateway.apply(this.filter, cr);
  }
}
