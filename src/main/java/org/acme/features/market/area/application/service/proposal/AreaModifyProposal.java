package org.acme.features.market.area.application.service.proposal;

import java.util.function.Consumer;
import java.util.function.UnaryOperator;

import org.acme.common.action.Interaction;
import org.acme.features.market.area.application.AreaDto;
import org.acme.features.market.area.domain.model.Area;

import jakarta.enterprise.event.Event;
import lombok.Data;
import lombok.EqualsAndHashCode;
import lombok.NonNull;
import lombok.experimental.SuperBuilder;

@Data
@SuperBuilder(toBuilder = true)
@EqualsAndHashCode(onlyExplicitlyIncluded = true)
public abstract class AreaModifyProposal {

  /**
   * @autogenerated VisibleContentProposalGenerator
   * @param emitter
   * @param proposal
   * @return
   */
  @SuppressWarnings("unchecked")
  public static AreaDto resolveWith(final Event<? extends AreaModifyProposal> emitter,
      final AreaModifyProposal proposal) {
    ((Event<AreaModifyProposal>) emitter).fire(proposal);
    return proposal.getDto();
  }

  /**
   * @autogenerated VisibleContentProposalGenerator
   */
  @NonNull
  private final Area entity;

  /**
   * @autogenerated VisibleContentProposalGenerator
   */
  @NonNull
  private final Interaction interaction;

  /**
   * @autogenerated VisibleContentProposalGenerator
   */
  @NonNull
  private AreaDto dto;

  /**
   * @autogenerated VisibleContentProposalGenerator
   * @param mapper
   */
  public void map(UnaryOperator<AreaDto> mapper) {
    dto = mapper.apply(dto);
  }

  /**
   * @autogenerated VisibleContentProposalGenerator
   * @param mapper
   */
  public void peek(Consumer<AreaDto> mapper) {
    mapper.accept(dto);
  }
}
