package org.acme.features.market.area.domain.model.rule;

import java.util.Iterator;
import java.util.Optional;
import java.util.Set;

import org.acme.features.market.area.domain.model.Area;
import org.acme.features.market.area.domain.model.Area.AreaBuilder;

public interface AreaBuildFormulaPipeline {

  /**
   * @autogenerated AggregateGenerator
   * @param rules
   * @param areaBuilder
   * @param original
   * @return
   */
  public static AreaBuilder fire(Iterator<AreaBuildFormulaPipeline> rules, AreaBuilder areaBuilder,
      Optional<Area> original) {
    AreaBuilder result = areaBuilder;
    while (rules.hasNext()) {
      result = rules.next().calculate(result, original);
    }
    return result;
  }

  /**
   * @autogenerated AggregateGenerator
   * @param areaBuilder
   * @param original
   * @return
   */
  AreaBuilder calculate(AreaBuilder areaBuilder, Optional<Area> original);

  /**
   * @autogenerated AggregateGenerator
   * @return
   */
  Set<String> fields();
}
