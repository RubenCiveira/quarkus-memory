package org.acme.features.market.merchant.domain.model.rule;

import java.util.Iterator;
import java.util.Optional;
import java.util.Set;

import org.acme.features.market.merchant.domain.model.Merchant;
import org.acme.features.market.merchant.domain.model.Merchant.MerchantBuilder;

public interface MerchantBuildFormulaPipeline {

  /**
   * @autogenerated AggregateGenerator
   * @param rules
   * @param merchantBuilder
   * @param original
   * @return
   */
  public static MerchantBuilder fire(Iterator<MerchantBuildFormulaPipeline> rules,
      MerchantBuilder merchantBuilder, Optional<Merchant> original) {
    MerchantBuilder result = merchantBuilder;
    while (rules.hasNext()) {
      result = rules.next().calculate(result, original);
    }
    return result;
  }

  /**
   * @autogenerated AggregateGenerator
   * @param merchantBuilder
   * @param original
   * @return
   */
  MerchantBuilder calculate(MerchantBuilder merchantBuilder, Optional<Merchant> original);

  /**
   * @autogenerated AggregateGenerator
   * @return
   */
  Set<String> fields();
}
