package org.acme.features.market.merchant.domain.model.valueobject;

import org.acme.common.exception.ConstraintException;
import org.acme.common.validation.AbstractFailList;
import org.acme.common.validation.ConstraintFail;
import org.acme.common.validation.ConstraintFailList;

import lombok.EqualsAndHashCode;
import lombok.Getter;
import lombok.RequiredArgsConstructor;
import lombok.ToString;
import lombok.With;

@Getter
@ToString
@RequiredArgsConstructor
@With
@EqualsAndHashCode(onlyExplicitlyIncluded = true)
public class MerchantEnabledVO {

  /**
   * An empty instance
   *
   * @autogenerated ValueObjectGenerator
   * @param enabled
   * @return An empty instance
   */
  public static MerchantEnabledVO from(final Boolean enabled) {
    return tryFrom(enabled);
  }

  /**
   * An empty instance
   *
   * @autogenerated ValueObjectGenerator
   * @param enabled
   * @return An empty instance
   */
  public static MerchantEnabledVO tryFrom(final Object enabled) {
    ConstraintFailList list = new ConstraintFailList();
    MerchantEnabledVO result = tryFrom(enabled, list);
    if (list.hasErrors()) {
      throw new ConstraintException(list);
    }
    return result;
  }

  /**
   * An empty instance
   *
   * @autogenerated ValueObjectGenerator
   * @param enabled temptative value
   * @param fails Error list
   * @return An empty instance
   */
  public static <T extends AbstractFailList> MerchantEnabledVO tryFrom(final Object enabled,
      final T fails) {
    if (null == enabled) {
      fails.add(new ConstraintFail("not-null", "enabled", null, "Cant be null"));
      return null;
    } else if (enabled instanceof Boolean) {
      return new MerchantEnabledVO((Boolean) enabled);
    } else {
      fails.add(new ConstraintFail("wrong-type", "enabled", enabled.getClass(),
          "A Boolean type is expected for enabled"));
      return null;
    }
  }

  /**
   * The indicator to allow the account be used without deleting it
   *
   * @autogenerated ValueObjectGenerator
   */
  private final Boolean value;

  /**
   * @autogenerated ValueObjectGenerator
   * @return
   */
  public Boolean getValue() {
    return value;
  }
}
